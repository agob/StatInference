hist(exp_dist, breaks = 100, xlim=c(0,50))
#hist(exp_dist, breaks = 100, xlim=c(0,50))
exp_dist
lambda <- 0.2
size <- 40 #size of the sample
nsim <- 1000 #number of simulations
#mean and sd of the exponential distribution are defined as 1/lambda
mean <- 1/lambda
sd <- 1/lambda
#let's have a look at the exp distribution
exp_dist <- rexp(size, lambda)
lambda
exp_dist
lambda <- 0.2
size <- 40 #size of the sample
nsim <- 1000 #number of simulations
#mean and sd of the exponential distribution are defined as 1/lambda
mean <- 1/lambda
sd <- 1/lambda
#let's have a look at the exp distribution
exp_dist <- rexp(size, lambda)
hist(exp_dist, breaks = 100, xlim=c(0,50))
hist(exp_dist, breaks = 100, xlim=c(0,50))
lambda <- 0.2
size <- 40 #size of the sample
nsim <- 1000 #number of simulations
#mean and sd of the exponential distribution are defined as 1/lambda
mean <- 1/lambda
sd <- 1/lambda
#let's have a look at the exp distribution
exp_dist <- rexp(size, lambda)
h <- hist(exp_dist, breaks = 100, xlim=c(0,50))
h
lambda <- 0.2
size <- 40 #size of the sample
nsim <- 1000 #number of simulations
#mean and sd of the exponential distribution are defined as 1/lambda
mean <- 1/lambda
std <- 1/lambda
#let's have a look at the exp distribution
set.seed(3)
exp_dist <- rexp(40, lambda)
#average of 40 exponentials
Aexp = replicate(nsim, mean(rexp(size,lambda)))
h <- hist(Aexp, breaks = 50, )
#mean of new distribution and comparison with theoretical mean
smean = mean(Aexp)
smean; mean
#sd of new distribution and comparison with theoretical standard deviation
ssd <- sd(Aexp)
theo_sd <- std / sqrt(size)
ssd; theo_sd
#now we show that the distribution of the averages of 40 exponential is approximately normal
hist(Aexp, breaks=50,main="Distribution of averages of 40,
exponential distributions with lambda=0.2")
qqnorm(Aexp); qqline(Aexp)
source('~/Documents/Coursera/StatInference/Project/exp.R', echo=TRUE)
lambda <- 0.2
size <- 40 #size of the sample
nsim <- 1000 #number of simulations
#mean and sd of the exponential distribution are defined as 1/lambda
mean <- 1/lambda
std <- 1/lambda
#let's have a look at the exp distribution
set.seed(123)
exp_dist <- rexp(10000, lambda)
h <- hist(exp_dist, breaks=50, xlim=(0,30),main="Exponential distribution with lambda = 0.2")
#average of 40 exponentials
Aexp <- matrix(rexp(num_sim*sample_size, rate=lambda), nsim, size)
hh <- hist(Aexp, breaks = 50)
#mean of new distribution and comparison with theoretical mean
smean = mean(Aexp)
smean; mean
#mean of the distribution of the average of 40 exponentials is close to the theoretical mean (as expected)
#sd of new distribution and comparison with theoretical standard deviation
ssd <- sd(Aexp)
theo_sd <- std / sqrt(size)
ssd; theo_sd
#As you can see the standard deviation of the averages is close to the theoretical standard deviation
#now we show that the distribution of the averages of 40 exponential is approximately normal
hist(Aexp, breaks=50,main="Distribution of averages of 40,
exponential distributions with lambda=0.2")
qqnorm(Aexp); qqline(Aexp)
print("The theoretical mean is: ", mean)
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
library("ggplot")
install.package("ggplot")
#install.packages("ggplots")
library("ggplots")
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
#install.packages("ggplots")
library("ggplot2")
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
g
dev.off()
library("ggplot2")
nosim <- 1000
cfunc <- function(x, n) sqrt(n) * (mean(x) - 3.5) / 1.71
dat <- data.frame(
x = c(apply(matrix(sample(1 : 6, nosim * 10, replace = TRUE),
nosim), 1, cfunc, 10),
apply(matrix(sample(1 : 6, nosim * 20, replace = TRUE),
nosim), 1, cfunc, 20),
apply(matrix(sample(1 : 6, nosim * 30, replace = TRUE),
nosim), 1, cfunc, 30)
),
size = factor(rep(c(10, 20, 30), rep(nosim, 3))))
g <- ggplot(dat, aes(x = x, fill = size)) + geom_histogram(alpha = .20, binwidth=.3, colour = "black", aes(y = ..density..))
g <- g + stat_function(fun = dnorm, size = 2)
g + facet_grid(. ~ size)
g
knitr::opts_chunk()
